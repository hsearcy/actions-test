def continuePipeline = true

pipeline {
  agent any
  environment {
    PACKAGE_PATH="packages/sls-test-A"
  }
  stages {
    stage('Echo Changes') {
      steps {
        script {
          echo "Package path is: ${env.PACKAGE_PATH}"
          def hasChanges = false;
          def changeLogSets = currentBuild.changeSets
          for (int i = 0; i < changeLogSets.size(); i++) {
            def entries = changeLogSets[i].items
            for (int j = 0; j < entries.length; j++) {
              def entry = entries[j]
              echo "${entry.commitId} by ${entry.author} on ${new Date(entry.timestamp)}: ${entry.msg}"
              def files = new ArrayList(entry.affectedFiles)
              for (int k = 0; k < files.size(); k++) {
                def file = files[k]
                echo "  ${file.editType.name} ${file.path}"
                if (file.path.contains(env.PACKAGE_PATH)) hasChanges = true
              }
            }
          }
          if (hasChanges) {
            echo "Changes detected in ${env.PACKAGE_PATH}"
          } else {
            continuePipeline = false
          }
        }
      }
    }
    stage('Continue?') {
      when {
        expression { !continuePipeline }
      }
      steps {
        input 'No changes detected, continue anyway?'
        script { continuePipeline = true }
      }
    }
    stage('Yarn install') {
      when {
        expression { continuePipeline }
      }
      steps {
        nodejs('Node 8') {
          sh '''cd $PACKAGE_PATH
                yarn'''
        }

      }
    }
    stage('Test') {
      when {
        expression { continuePipeline }
      }
      steps {
        nodejs('Node 8') {
          sh '''cd $PACKAGE_PATH
                yarn jest'''
        }

      }
    }
    stage('Deploy') {
      when {
        expression { continuePipeline }
      }
      steps {
        input 'Deploy?'
        nodejs('Node 8') {
          sh '''cd $PACKAGE_PATH
                sls deploy'''
        }

      }
    }
    stage('Remove') {
      when {
        expression { continuePipeline }
      }
      steps {
        input 'Remove sls'
        nodejs('Node 8') {
          sh '''cd $PACKAGE_PATH
                sls remove'''
        }

      }
    }
  }
}
