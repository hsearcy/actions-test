pipeline {
  agent any
  stages {
    stage('Echo Changes') {
      steps {
        script {
          def hasChanges = false;
          def changeLogSets = currentBuild.changeSets
          for (int i = 0; i < changeLogSets.size(); i++) {
              def entries = changeLogSets[i].items
              for (int j = 0; j < entries.length; j++) {
                  def entry = entries[j]
                  echo "${entry.commitId} by ${entry.author} on ${new Date(entry.timestamp)}: ${entry.msg}"
                  def files = new ArrayList(entry.affectedFiles)
                  for (int k = 0; k < files.size(); k++) {
                      def file = files[k]
                      echo "  ${file.editType.name} ${file.path}"
                  }
                  echo "Has CHANGES: ???? TODO: check syntax to see if changes in path, continue build option"
                  
              }
            }
          }
        }
      }
    
    stage('Yarn install') {
      steps {
        nodejs('Node 8') {
          sh '''cd ./packages/sls-test-A
yarn'''
        }

      }
    }
    stage('Test') {
      steps {
        nodejs('Node 8') {
          sh '''cd ./packages/sls-test-A
yarn jest'''
        }

      }
    }
    stage('Deploy') {
      steps {
        input 'Deploy?'
        nodejs('Node 8') {
          sh '''cd ./packages/sls-test-A
sls deploy'''
        }

      }
    }
    stage('Remove') {
      steps {
        input 'Remove sls'
        nodejs('Node 8') {
          sh '''cd ./packages/sls-test-A
sls remove'''
        }

      }
    }
  }
}
